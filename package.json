{
  "name": "@castplan/automation-mcp",
  "version": "2.1.0",
  "description": "CastPlan Automation MCP Server - Universal auto-configuration for any project",
  "type": "module",
  "main": "dist/index.js",
  "bin": {
    "castplan-mcp": "dist/cli.js",
    "castplan-init": "dist/cli.js",
    "castplan-config": "dist/cli.js"
  },
  "files": [
    "dist/**/*",
    "configs/**/*",
    "scripts/**/*",
    "README.md",
    "LICENSE",
    "INSTALL.md"
  ],
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "os": ["win32", "darwin", "linux"],
  "cpu": ["x64", "arm64"],
  "preferGlobal": true,
  
  "scripts": {
    "build": "tsc && npm run build:configs",
    "build:configs": "node scripts/build-configs.js",
    "build:production": "node scripts/production-build.js",
    "build:development": "NODE_ENV=development npm run build",
    "build:staging": "NODE_ENV=staging npm run build:production",
    "build:docker": "docker build -t castplan/automation-mcp:latest .",
    "build:multi-platform": "docker buildx build --platform linux/amd64,linux/arm64 -t castplan/automation-mcp:latest .",
    "dev": "tsc -w",
    "start": "node dist/index.js",
    "cli": "node dist/cli.js",
    "init": "node dist/cli.js init",
    "config": "node dist/cli.js config",
    "verify": "node dist/cli.js verify",
    "doctor": "node dist/cli.js doctor",
    "clean": "rimraf dist coverage test-results node_modules/.cache",
    "install:global": "npm install -g .",
    "install:user": "npm install --prefix ~/.npm-global .",
    "test": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" jest",
    "test:win": "set NODE_OPTIONS=--max-old-space-size=4096 && jest",
    "test:coverage": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" JEST_COVERAGE=true jest --coverage",
    "test:coverage:win": "set NODE_OPTIONS=--max-old-space-size=4096 && set JEST_COVERAGE=true && jest --coverage",
    "test:watch": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" jest --watch --no-coverage",
    "test:watch:win": "set NODE_OPTIONS=--max-old-space-size=4096 && jest --watch --no-coverage",
    "test:debug": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096 --inspect-brk\" jest --runInBand --no-cache",
    "test:memory": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" JEST_MONITOR_MEMORY=true jest",
    "test:ci": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" jest --ci --coverage --maxWorkers=2 --passWithNoTests --verbose",
    "test:single": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" jest --testNamePattern",
    "prebuild": "npm run clean",
    "posttest": "npm run test:cleanup",
    "test:cleanup": "rimraf coverage/.tmp test-results/.tmp",
    "test:comprehensive": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" JEST_COVERAGE=true jest --coverage --verbose --detectOpenHandles",
    "test:performance": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" jest --testPathPattern=PerformanceTests --verbose",
    "test:e2e": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" jest --testPathPattern=e2e --verbose",
    "test:integration": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" jest --testPathPattern=integration --verbose",
    "test:tools": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" jest --testPathPattern=tools --verbose",
    "test:services": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" jest --testPathPattern=services --verbose --testNamePattern=\"Service\"",
    "test:comprehensive-suite": "node scripts/comprehensive-test-runner.js",
    "test:comprehensive-fast": "node scripts/comprehensive-test-runner.js --fail-fast",
    "test:contracts": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" jest --testPathPattern=ContractTests --verbose",
    "test:database": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" jest --testPathPattern=DatabaseIntegrationTests --verbose",
    "test:chains": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" jest --testPathPattern=ServiceIntegrationChainTests --verbose",
    "test:security": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" jest --testNamePattern=\"security|Security\" --verbose",
    "test:report": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" jest --coverage --coverageReporters=html,json,lcov,text && npm run test:report:generate",
    "test:report:generate": "node -e \"console.log('ðŸ“Š Test reports generated in coverage/ directory')\"",
    "test:all": "npm run test:comprehensive-suite",
    "package:all": "npm run build && npm run package:npm && npm run package:python",
    "package:npm": "npm pack",
    "package:python": "cd python-bridge && python -m build",
    "publish:all": "npm run package:all && npm run publish:npm && npm run publish:python",
    "publish:npm": "npm publish",
    "publish:python": "cd python-bridge && python -m twine upload dist/*",
    "install:test": "npm run test:install",
    "test:install": "node scripts/test-installation.js",
    "verify:build": "npm run build && npm run test:ci",
    "deploy:staging": "npm run build:staging && npm run package:all",
    "deploy:production": "npm run build:production && npm run test:ci && npm run package:all",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f castplan-mcp",
    "docker:dev": "docker-compose --profile development up -d",
    "docker:test": "docker-compose --profile testing up --abort-on-container-exit",
    "docker:monitoring": "docker-compose --profile monitoring up -d",
    "health": "node dist/cli.js health",
    "security:audit": "npm audit && snyk test",
    "performance:benchmark": "npm run test:performance && npm run analyze:bundle",
    "analyze:bundle": "node scripts/analyze-bundle.js"
  },
  "keywords": [
    "mcp",
    "castplan",
    "automation",
    "documentation",
    "bmad",
    "hooks",
    "ai-analysis",
    "claude",
    "universal-packaging",
    "cross-platform",
    "multi-manager",
    "typescript",
    "configuration",
    "cli"
  ],
  "author": "CastPlan Team",
  "license": "MIT",
  "dependencies": {
    "@modelcontextprotocol/sdk": "^0.5.0",
    "chokidar": "^3.5.3",
    "date-fns": "^2.30.0",
    "date-fns-tz": "^2.0.0",
    "glob": "^10.3.10",
    "gray-matter": "^4.0.3",
    "js-yaml": "^4.1.0",
    "marked": "^11.0.0",
    "remark-parse": "^11.0.0",
    "remark-stringify": "^11.0.0",
    "sqlite3": "^5.1.6",
    "unified": "^11.0.4",
    "uuid": "^9.0.1",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^4.7.1",
    "zod": "^3.22.4",
    "commander": "^11.1.0",
    "redis": "^4.6.12",
    "axios": "^1.6.5",
    "chalk": "^5.3.0",
    "dotenv": "^16.3.1",
    "ioredis": "^5.3.2",
    "lodash": "^4.17.21",
    "mermaid": "^10.6.1",
    "ora": "^8.0.1",
    "p-limit": "^5.0.0"
  },
  "devDependencies": {
    "@types/node": "^20.10.5",
    "@types/js-yaml": "^4.0.9",
    "@types/uuid": "^9.0.7",
    "@types/lodash": "^4.14.202",
    "typescript": "^5.3.3",
    "rimraf": "^5.0.5",
    "jest": "^29.7.0",
    "@types/jest": "^29.5.11",
    "ts-jest": "^29.1.1",
    "cross-env": "^7.0.3",
    "jest-junit": "^16.0.0",
    "playwright": "^1.40.0",
    "@playwright/test": "^1.40.0",
    "vitest": "^1.2.0",
    "@vitest/ui": "^1.2.0",
    "happy-dom": "^13.1.4",
    "jsdom": "^24.0.0",
    "@rollup/plugin-json": "^6.1.0",
    "@rollup/plugin-node-resolve": "^15.2.3",
    "@rollup/plugin-typescript": "^11.1.5",
    "@swc/core": "^1.3.102",
    "@swc/jest": "^0.2.29",
    "esbuild": "^0.19.11",
    "rollup": "^4.9.4",
    "tsup": "^8.0.1"
  },
  
  "optionalDependencies": {
    "openai": "^4.20.0",
    "@anthropic-ai/sdk": "^0.16.0"
  },
  
  "repository": {
    "type": "git",
    "url": "https://github.com/Ghostseller/CastPlan_mcp.git"
  },
  "homepage": "https://github.com/Ghostseller/CastPlan_mcp",
  "bugs": {
    "url": "https://github.com/Ghostseller/CastPlan_mcp/issues",
    "email": "banessayuu@gmail.com"
  },
  
  "funding": {
    "type": "github",
    "url": "https://github.com/sponsors/Ghostseller"
  },
  
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org/"
  },
  
  "castplan": {
    "type": "mcp-server",
    "universal-packaging": true,
    "supported-managers": ["npm", "yarn", "pnpm", "pip", "uv", "uvx"],
    "supported-platforms": ["win32", "darwin", "linux"],
    "supported-environments": ["claude-desktop", "cline", "cursor", "standard-mcp"],
    "auto-configuration": true,
    "multi-manager": true
  }
}
